import os

# gunicorn.conf
def when_ready(server):
    # touch app-initialized when ready
    print('Worker count of', WORKERS)
    open('/tmp/app-initialized', 'w').close()

# As per https://devcenter.heroku.com/articles/optimizing-dyno-usage#python
if os.environ.get('WEB_CONCURRENCY'):
    WORKERS = int(os.environ['WEB_CONCURRENCY'])
else:
    WORKERS = 4

chdir = './tabbycat/'
bind = 'unix:///tmp/wsgi.socket'
workers = WORKERS
worker_class = 'sync'

# See https://devcenter.heroku.com/articles/python-gunicorn#basic-configuration
max_requests = 250 # Minimise memory leaks by restarting workers periodically
preload_app = True # Load the app before workers are forked; saves RAM + boot
